Holographic Reduced Representations in Python
*********************************************

Symbols are key to Holographic Reduced Representations.  This library provides
ways of generating, binding, composing, scaling and exponentiating symbols and
their vector representations.  For ease of use, each symbol is represented by
both a vector (for HRR) and a label.  When binding and composing symbols the
label is modified to indicate the performed operations.

:class:`.SymbolFactory` -- Factory for :class:`.Symbol` objects
---------------------------------------------------------------

The :class:`.SymbolFactory` class is used as a
source of :class:`.Symbol` objects for almost all
uses of this library. A :class:`.SymbolFactory`
ensures that all :class:`.Symbol` objects derived
from it are of the same dimensionality, type and distribution: e.g.,
it is not possible to bind a standard :class:`.Symbol`
with a :class:`.SaturatingSymbol`.

In normal usage you'll create a :class:`.SymbolFactory` and then use it to
generate symbols.  The following creates a :class:`.SymbolFactory` which will
generate symbols with 512 dimensions, using the default generator, and which
are generic :class:`.Symbol` objects.::

    factory = SymbolFactory( 512, vec_generate, Symbol )

This can then be used to generate symbols::

    a = factory.new_symbol( 'a' )
    b = factory.new_symbol( 'b' )

Using :class:`.Symbol` objects
------------------------------

Once :class:`.Symbol` objects have been generated by a :class:`.SymbolFactory`
they may be manipulated in many ways.

* Bound (using circular convolution) :meth:`.Symbol.bind`
* Unbound :meth:`.Symbol.unbind`
* Composed (addition) :meth:`.Symbol.compose`
* Scaled (scalar multiplication) :meth:`.Symbol.scale`
* Exponentiated (repeated binding to self) :meth:`.Symbol.exponentiate`

You are referred to some of the examples for more complex usage.

Memories and Clean Up
---------------------

Unbinding :class:`.Symbol` objects is noisy, so Clean Up Memories are used to
provide clean versions of Symbols once they are unbound.

MORE HERE...

Documentation
-------------

.. toctree::
    :maxdepth: 2

    symbol
